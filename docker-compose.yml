version: '3'

services:
  db:
    container_name: db
    image: postgres:latest
    environment:
      - POSTGRES_DB=wb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - rmoff_kafka


  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    container_name: migrate
    command: ["up"]
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - rmoff_kafka


  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    networks: 
      - rmoff_kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181


  broker:
    image: confluentinc/cp-kafka:5.5.0
    container_name: broker
    networks: 
      - rmoff_kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

  
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: dev-local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092,broker:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - rmoff_kafka
    depends_on:
      - broker


  app:
    build: .
    ports:
      - "8000:8000"
    container_name: app
    networks:
      - rmoff_kafka
    depends_on:
      - db
      - broker
    env_file:
      - .env



volumes:
  db-data:


networks: 
  rmoff_kafka:
    name: rmoff_kafka